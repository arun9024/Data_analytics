# Chunk 1: Setup
knitr::opts_chunk$set(echo = TRUE)
library(rpart.plot)
library(rattle)
# Chunk 1: Setup
knitr::opts_chunk$set(echo = TRUE)
library(rpart.plot)
library(rattle)
library(caret)
library(klaR)
library(ggplot2)
# Chunk 2
adult <- read.csv("/Users/Arun/Desktop/Income/adult.train")
# Chunk 3
dim(adult)
# Chunk 4
str(adult)
# Chunk 5
summary(adult)
# Chunk 6
is.na(adult) = adult=='?'
is.na(adult) = adult==' ?'
table(complete.cases(adult))
# Chunk 7
adult = na.omit(adult)
adult$fnlwgt = NULL
adult$education.num = NULL
# Chunk 8
dim(adult)
# Chunk 9
summary(adult$age)
adult[[ "age"]] <- ordered(cut(adult[[ "age"]], c(0,25,45,65,100)), labels = c("Young", "Middle-aged", "Senior", "Old"))
sort(table(adult$age))
pie(table(adult$age), col = rainbow(4))
qplot (income, data = adult, fill = age) + facet_grid (. ~ age) +
ggtitle("Age distribution for different income levels")
# Chunk 10
sort(table(adult$sex))
pie(table(adult$sex), col = rainbow(3))
# Chunk 11
qplot (income, data = adult, fill = sex) + facet_grid (. ~ sex) +
ggtitle("Sex distribution for different income levels")
# Chunk 12
sort(table(adult$relationship))
pie(table(adult$relationship), col = rainbow(6))
qplot (income, data = adult, fill = relationship) + facet_grid (. ~ relationship) +
ggtitle("Relationship for different income levels")
# Chunk 13
sort(table(adult$race))
adult$race = gsub("Amer-Indian-Eskimo", "Amer-Indian", adult$race)
adult$race = gsub("Asian-Pac-Islander", "Asian", adult$race)
sort(table(adult$race))
pie(table(adult$race), col = rainbow(5))
# Chunk 14
qplot (income, data = adult, fill = race) + facet_grid (. ~ race) +
ggtitle("Race distribution for different income levels")
# Chunk 15
sort(table(adult$marital.status))
adult$marital.status = gsub("Married-AF-spouse", "Married", adult$marital.status)
adult$marital.status = gsub("Married-civ-spouse", "Married", adult$marital.status)
adult$marital.status = gsub("Married-spouse-absent", "Unmarried", adult$marital.status)
adult$marital.status = gsub("Separated", "Unmarried", adult$marital.status)
adult$marital.status = gsub("Divorced", "Unmarried", adult$marital.status)
sort(table(adult$marital.status))
pie(table(adult$marital.status), col = rainbow(4))
qplot (income, data = adult, fill = marital.status) + facet_grid (. ~ marital.status) +
ggtitle("Marital relation distribution for different income levels")
# Chunk 16
sort(table(adult$education))
adult$education = gsub("10th","Droppped",adult$education)
adult$education = gsub("11th","Droppped",adult$education)
adult$education = gsub("12th","Droppped",adult$education)
adult$education = gsub("1st-4th","Droppped",adult$education)
adult$education = gsub("5th-6th","Droppped",adult$education)
adult$education = gsub("7th-8th","Droppped",adult$education)
adult$education = gsub("9th","Droppped",adult$education)
adult$education = gsub("Preschool","Droppped",adult$education)
adult$education = gsub("Assoc-acdm","Associates",adult$education)
adult$education = gsub("Assoc-voc","Associates",adult$education)
adult$education = gsub("HS-grad","HS-Graduate",adult$education)
adult$education = gsub("Some-college","HS-Graduate",adult$education)
sort(table(adult$education))
pie(sort(table(adult$education)), col = rainbow(7))
# Chunk 17
qplot (income, data = adult, fill = education) + facet_grid (. ~ education) +
ggtitle("Educational level for different income levels") +
theme(text = element_text(size=11), axis.text.x = element_text(angle=90, vjust=1))
# Chunk 18
sort(table(adult$workclass))
adult$workclass = gsub("Local-gov","Some-Govt",adult$workclass)
adult$workclass = gsub("State-gov","Some-Govt",adult$workclass)
adult$workclass = gsub("Self-emp-inc","Self-Employed",adult$workclass)
adult$workclass = gsub("Self-emp-not-inc","Self-Employed",adult$workclass)
adult$workclass = gsub("Without-pay","Not-Working",adult$workclass)
adult$workclass = gsub("Never-worked","Not-Working",adult$workclass)
sort(table(adult$workclass))
pie(table(adult$workclass), col = rainbow(5))
qplot (income, data = adult, fill = workclass) + facet_grid (. ~ workclass) +
ggtitle("Workclass distribution for different income levels") +
theme(text = element_text(size=11), axis.text.x = element_text(angle=90, vjust=1))
# Chunk 19
sort(table(adult$occupation))
adult$occupation = gsub("Adm-clerical","Admin",adult$occupation)
adult$occupation = gsub("Armed-Forces","Military",adult$occupation)
adult$occupation = gsub("Craft-repair","Blue-Collar",adult$occupation)
adult$occupation = gsub("Exec-managerial","White-Collar",adult$occupation)
adult$occupation = gsub("Farming-fishing","Blue-Collar",adult$occupation)
adult$occupation = gsub("Handlers-cleaners","Blue-Collar",adult$occupation)
adult$occupation = gsub("Machine-op-inspct","Blue-Collar",adult$occupation)
adult$occupation = gsub("Other-service","Service",adult$occupation)
adult$occupation = gsub("Priv-house-serv","Service",adult$occupation)
adult$occupation = gsub("Prof-specialty","Professional",adult$occupation)
adult$occupation = gsub("Protective-serv","Other-Occupations",adult$occupation)
adult$occupation = gsub("Tech-support","White-Collar",adult$occupation)
adult$occupation = gsub("Transport-moving","Blue-Collar",adult$occupation)
sort(table(adult$occupation))
pie(table(adult$occupation), col = rainbow(8))
qplot (income, data = adult, fill = occupation) + facet_grid (. ~ occupation) +
ggtitle("Occupation distribution for different income levels") +
theme(text = element_text(size=8), axis.text.x = element_text(angle=90, vjust=1))
# Chunk 20
summary(adult$hours.per.week)
adult[[ "hours.per.week"]] <- ordered(cut(adult[[ "hours.per.week"]], c(0,25,40,60,168)), labels = c("Part-time", "Full-time", "Over-time", "Workaholic"))
sort(table(adult$hours.per.week))
pie(table(adult$hours.per.week), col = rainbow(4))
# Chunk 21
qplot (income, data = adult, fill = hours.per.week) + facet_grid (. ~ hours.per.week) +
ggtitle("Working-hours distribution for different income levels")
# Chunk 22
test <- read.csv("/Users/Arun/Desktop/Income/adult.test")
is.na(test) = test=='?'
is.na(test) = test==' ?'
table(complete.cases(test))
test = na.omit(test)
test$fnlwgt = NULL
test$education.num = NULL
test[[ "age"]] <- ordered(cut(test[[ "age"]], c(0,25,45,65,100)), labels = c("Young", "Middle-aged", "Senior", "Old"))
test$race = gsub("Amer-Indian-Eskimo", "Amer-Indian", test$race)
test$race = gsub("Asian-Pac-Islander", "Asian", test$race)
test$marital.status = gsub("Married-AF-spouse", "Married", test$marital.status)
test$marital.status = gsub("Married-civ-spouse", "Married", test$marital.status)
test$marital.status = gsub("Married-spouse-absent", "Unmarried", test$marital.status)
test$marital.status = gsub("Separated", "Unmarried", test$marital.status)
test$marital.status = gsub("Divorced", "Unmarried", test$marital.status)
test$education = gsub("10th","Droppped",test$education)
test$education = gsub("11th","Droppped",test$education)
test$education = gsub("12th","Droppped",test$education)
test$education = gsub("1st-4th","Droppped",test$education)
test$education = gsub("5th-6th","Droppped",test$education)
test$education = gsub("7th-8th","Droppped",test$education)
test$education = gsub("9th","Droppped",test$education)
test$education = gsub("Preschool","Droppped",test$education)
test$education = gsub("Assoc-acdm","Associates",test$education)
test$education = gsub("Assoc-voc","Associates",test$education)
test$education = gsub("HS-grad","HS-Graduate",test$education)
test$education = gsub("Some-college","HS-Graduate",test$education)
test$workclass = gsub("Local-gov","Some-Govt",test$workclass)
test$workclass = gsub("State-gov","Some-Govt",test$workclass)
test$workclass = gsub("Self-emp-inc","Self-Employed",test$workclass)
test$workclass = gsub("Self-emp-not-inc","Self-Employed",test$workclass)
test$workclass = gsub("Without-pay","Not-Working",test$workclass)
test$workclass = gsub("Never-worked","Not-Working",test$workclass)
test$occupation = gsub("Adm-clerical","Admin",test$occupation)
test$occupation = gsub("Armed-Forces","Military",test$occupation)
test$occupation = gsub("Craft-repair","Blue-Collar",test$occupation)
test$occupation = gsub("Exec-managerial","White-Collar",test$occupation)
test$occupation = gsub("Farming-fishing","Blue-Collar",test$occupation)
test$occupation = gsub("Handlers-cleaners","Blue-Collar",test$occupation)
test$occupation = gsub("Machine-op-inspct","Blue-Collar",test$occupation)
test$occupation = gsub("Other-service","Service",test$occupation)
test$occupation = gsub("Priv-house-serv","Service",test$occupation)
test$occupation = gsub("Prof-specialty","Professional",test$occupation)
test$occupation = gsub("Protective-serv","Other-Occupations",test$occupation)
test$occupation = gsub("Tech-support","White-Collar",test$occupation)
test$occupation = gsub("Transport-moving","Blue-Collar",test$occupation)
test[[ "hours.per.week"]] <- ordered(cut(test[[ "hours.per.week"]], c(0,25,40,60,168)), labels = c("Part-time", "Full-time", "Over-time", "Workaholic"))
# Chunk 23
decision_tree <- rpart(income ~ age + workclass + education + capital.gain + capital.loss + relationship + sex + race, data = adult, method = "class")
print(decision_tree)
fancyRpartPlot(decision_tree, main = "                Income Level")
# Chunk 24
pred <- predict(decision_tree, test[1:12])
test$pred_income = ifelse(pred[,1] >= .5, "<=50K", ">50K")
test$pred_income = factor(test$pred_income)
test$income = as.numeric(test$income)
test$pred_income = as.numeric(test$pred_income)
accuracy <- round(sum(test[13] == test[14])/nrow(test), digits = 4)
print(paste("The Decision tree model predicted the income of adult.test dataset with", accuracy*100, "% of accuracy."))
# Chunk 25
naive_bayes <- NaiveBayes(income ~ ., data=adult)
test$pred_income = predict(naive_bayes, test[1:12])
test$pred_income = factor(test$pred_income$class)
test$pred_income = as.numeric(test$pred_income)
accuracy <- round(sum(test[13] == test[14])/nrow(test), digits = 4)
# Chunk 26
print(naive_bayes$tables)
print(naive_bayes$apriori)
print(naive_bayes$levels)
print(paste("The Decision tree model predicted the income of adult.test dataset with", accuracy*100, "% of accuracy."))
# Chunk 1: Setup
knitr::opts_chunk$set(echo = TRUE)
library(rpart.plot)
library(rattle)
library(caret)
library(klaR)
library(ggplot2)
# Chunk 2
adult <- read.csv("/Users/Arun/Desktop/Income/adult.train")
# Chunk 3
dim(adult)
# Chunk 4
str(adult)
# Chunk 5
summary(adult)
# Chunk 6
is.na(adult) = adult=='?'
is.na(adult) = adult==' ?'
table(complete.cases(adult))
# Chunk 7
adult = na.omit(adult)
adult$fnlwgt = NULL
adult$education.num = NULL
# Chunk 8
dim(adult)
# Chunk 9
summary(adult$age)
adult[[ "age"]] <- ordered(cut(adult[[ "age"]], c(0,25,45,65,100)), labels = c("Young", "Middle-aged", "Senior", "Old"))
sort(table(adult$age))
pie(table(adult$age), col = rainbow(4))
qplot (income, data = adult, fill = age) + facet_grid (. ~ age) +
ggtitle("Age distribution for different income levels")
# Chunk 10
sort(table(adult$sex))
pie(table(adult$sex), col = rainbow(3))
# Chunk 11
qplot (income, data = adult, fill = sex) + facet_grid (. ~ sex) +
ggtitle("Sex distribution for different income levels")
# Chunk 12
sort(table(adult$relationship))
pie(table(adult$relationship), col = rainbow(6))
qplot (income, data = adult, fill = relationship) + facet_grid (. ~ relationship) +
ggtitle("Relationship for different income levels")
# Chunk 13
sort(table(adult$race))
adult$race = gsub("Amer-Indian-Eskimo", "Amer-Indian", adult$race)
adult$race = gsub("Asian-Pac-Islander", "Asian", adult$race)
sort(table(adult$race))
pie(table(adult$race), col = rainbow(5))
# Chunk 14
qplot (income, data = adult, fill = race) + facet_grid (. ~ race) +
ggtitle("Race distribution for different income levels")
# Chunk 15
sort(table(adult$marital.status))
adult$marital.status = gsub("Married-AF-spouse", "Married", adult$marital.status)
adult$marital.status = gsub("Married-civ-spouse", "Married", adult$marital.status)
adult$marital.status = gsub("Married-spouse-absent", "Unmarried", adult$marital.status)
adult$marital.status = gsub("Separated", "Unmarried", adult$marital.status)
adult$marital.status = gsub("Divorced", "Unmarried", adult$marital.status)
sort(table(adult$marital.status))
pie(table(adult$marital.status), col = rainbow(4))
qplot (income, data = adult, fill = marital.status) + facet_grid (. ~ marital.status) +
ggtitle("Marital relation distribution for different income levels")
# Chunk 16
sort(table(adult$education))
adult$education = gsub("10th","Droppped",adult$education)
adult$education = gsub("11th","Droppped",adult$education)
adult$education = gsub("12th","Droppped",adult$education)
adult$education = gsub("1st-4th","Droppped",adult$education)
adult$education = gsub("5th-6th","Droppped",adult$education)
adult$education = gsub("7th-8th","Droppped",adult$education)
adult$education = gsub("9th","Droppped",adult$education)
adult$education = gsub("Preschool","Droppped",adult$education)
adult$education = gsub("Assoc-acdm","Associates",adult$education)
adult$education = gsub("Assoc-voc","Associates",adult$education)
adult$education = gsub("HS-grad","HS-Graduate",adult$education)
adult$education = gsub("Some-college","HS-Graduate",adult$education)
sort(table(adult$education))
pie(sort(table(adult$education)), col = rainbow(7))
# Chunk 17
qplot (income, data = adult, fill = education) + facet_grid (. ~ education) +
ggtitle("Educational level for different income levels") +
theme(text = element_text(size=11), axis.text.x = element_text(angle=90, vjust=1))
# Chunk 18
sort(table(adult$workclass))
adult$workclass = gsub("Local-gov","Some-Govt",adult$workclass)
adult$workclass = gsub("State-gov","Some-Govt",adult$workclass)
adult$workclass = gsub("Self-emp-inc","Self-Employed",adult$workclass)
adult$workclass = gsub("Self-emp-not-inc","Self-Employed",adult$workclass)
adult$workclass = gsub("Without-pay","Not-Working",adult$workclass)
adult$workclass = gsub("Never-worked","Not-Working",adult$workclass)
sort(table(adult$workclass))
pie(table(adult$workclass), col = rainbow(5))
qplot (income, data = adult, fill = workclass) + facet_grid (. ~ workclass) +
ggtitle("Workclass distribution for different income levels") +
theme(text = element_text(size=11), axis.text.x = element_text(angle=90, vjust=1))
# Chunk 19
sort(table(adult$occupation))
adult$occupation = gsub("Adm-clerical","Admin",adult$occupation)
adult$occupation = gsub("Armed-Forces","Military",adult$occupation)
adult$occupation = gsub("Craft-repair","Blue-Collar",adult$occupation)
adult$occupation = gsub("Exec-managerial","White-Collar",adult$occupation)
adult$occupation = gsub("Farming-fishing","Blue-Collar",adult$occupation)
adult$occupation = gsub("Handlers-cleaners","Blue-Collar",adult$occupation)
adult$occupation = gsub("Machine-op-inspct","Blue-Collar",adult$occupation)
adult$occupation = gsub("Other-service","Service",adult$occupation)
adult$occupation = gsub("Priv-house-serv","Service",adult$occupation)
adult$occupation = gsub("Prof-specialty","Professional",adult$occupation)
adult$occupation = gsub("Protective-serv","Other-Occupations",adult$occupation)
adult$occupation = gsub("Tech-support","White-Collar",adult$occupation)
adult$occupation = gsub("Transport-moving","Blue-Collar",adult$occupation)
sort(table(adult$occupation))
pie(table(adult$occupation), col = rainbow(8))
qplot (income, data = adult, fill = occupation) + facet_grid (. ~ occupation) +
ggtitle("Occupation distribution for different income levels") +
theme(text = element_text(size=8), axis.text.x = element_text(angle=90, vjust=1))
# Chunk 20
summary(adult$hours.per.week)
adult[[ "hours.per.week"]] <- ordered(cut(adult[[ "hours.per.week"]], c(0,25,40,60,168)), labels = c("Part-time", "Full-time", "Over-time", "Workaholic"))
sort(table(adult$hours.per.week))
pie(table(adult$hours.per.week), col = rainbow(4))
# Chunk 21
qplot (income, data = adult, fill = hours.per.week) + facet_grid (. ~ hours.per.week) +
ggtitle("Working-hours distribution for different income levels")
# Chunk 22
test <- read.csv("/Users/Arun/Desktop/Income/adult.test")
is.na(test) = test=='?'
is.na(test) = test==' ?'
table(complete.cases(test))
test = na.omit(test)
test$fnlwgt = NULL
test$education.num = NULL
test[[ "age"]] <- ordered(cut(test[[ "age"]], c(0,25,45,65,100)), labels = c("Young", "Middle-aged", "Senior", "Old"))
test$race = gsub("Amer-Indian-Eskimo", "Amer-Indian", test$race)
test$race = gsub("Asian-Pac-Islander", "Asian", test$race)
test$marital.status = gsub("Married-AF-spouse", "Married", test$marital.status)
test$marital.status = gsub("Married-civ-spouse", "Married", test$marital.status)
test$marital.status = gsub("Married-spouse-absent", "Unmarried", test$marital.status)
test$marital.status = gsub("Separated", "Unmarried", test$marital.status)
test$marital.status = gsub("Divorced", "Unmarried", test$marital.status)
test$education = gsub("10th","Droppped",test$education)
test$education = gsub("11th","Droppped",test$education)
test$education = gsub("12th","Droppped",test$education)
test$education = gsub("1st-4th","Droppped",test$education)
test$education = gsub("5th-6th","Droppped",test$education)
test$education = gsub("7th-8th","Droppped",test$education)
test$education = gsub("9th","Droppped",test$education)
test$education = gsub("Preschool","Droppped",test$education)
test$education = gsub("Assoc-acdm","Associates",test$education)
test$education = gsub("Assoc-voc","Associates",test$education)
test$education = gsub("HS-grad","HS-Graduate",test$education)
test$education = gsub("Some-college","HS-Graduate",test$education)
test$workclass = gsub("Local-gov","Some-Govt",test$workclass)
test$workclass = gsub("State-gov","Some-Govt",test$workclass)
test$workclass = gsub("Self-emp-inc","Self-Employed",test$workclass)
test$workclass = gsub("Self-emp-not-inc","Self-Employed",test$workclass)
test$workclass = gsub("Without-pay","Not-Working",test$workclass)
test$workclass = gsub("Never-worked","Not-Working",test$workclass)
test$occupation = gsub("Adm-clerical","Admin",test$occupation)
test$occupation = gsub("Armed-Forces","Military",test$occupation)
test$occupation = gsub("Craft-repair","Blue-Collar",test$occupation)
test$occupation = gsub("Exec-managerial","White-Collar",test$occupation)
test$occupation = gsub("Farming-fishing","Blue-Collar",test$occupation)
test$occupation = gsub("Handlers-cleaners","Blue-Collar",test$occupation)
test$occupation = gsub("Machine-op-inspct","Blue-Collar",test$occupation)
test$occupation = gsub("Other-service","Service",test$occupation)
test$occupation = gsub("Priv-house-serv","Service",test$occupation)
test$occupation = gsub("Prof-specialty","Professional",test$occupation)
test$occupation = gsub("Protective-serv","Other-Occupations",test$occupation)
test$occupation = gsub("Tech-support","White-Collar",test$occupation)
test$occupation = gsub("Transport-moving","Blue-Collar",test$occupation)
test[[ "hours.per.week"]] <- ordered(cut(test[[ "hours.per.week"]], c(0,25,40,60,168)), labels = c("Part-time", "Full-time", "Over-time", "Workaholic"))
# Chunk 23
decision_tree <- rpart(income ~ age + workclass + education + capital.gain + capital.loss + relationship + sex + race, data = adult, method = "class")
print(decision_tree)
fancyRpartPlot(decision_tree, main = "                Income Level")
# Chunk 24
pred <- predict(decision_tree, test[1:12])
test$pred_income = ifelse(pred[,1] >= .5, "<=50K", ">50K")
test$pred_income = factor(test$pred_income)
test$income = as.numeric(test$income)
test$pred_income = as.numeric(test$pred_income)
accuracy <- round(sum(test[13] == test[14])/nrow(test), digits = 4)
print(paste("The Decision tree model predicted the income of adult.test dataset with", accuracy*100, "% of accuracy."))
# Chunk 25
naive_bayes <- NaiveBayes(income ~ ., data=adult)
test$pred_income = predict(naive_bayes, test[1:12])
test$pred_income = factor(test$pred_income$class)
test$pred_income = as.numeric(test$pred_income)
accuracy <- round(sum(test[13] == test[14])/nrow(test), digits = 4)
# Chunk 26
print(naive_bayes$tables)
print(naive_bayes$apriori)
print(naive_bayes$levels)
